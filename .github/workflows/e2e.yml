# SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)
#
# SPDX-License-Identifier: AGPL-3.0-only

name: e2e

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    name: Build test build of frontend
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Cache build
        uses: actions/cache@v3.0.2
        id: build-cache
        with:
          path: .next
          key: build-${{ github.sha }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        if: steps.build-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-16-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Set up NodeJS
        if: steps.build-cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Build test production build
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: yarn build:test

      - uses: actions/upload-artifact@master
        with:
          name: next-build
          path: |
            .next
            !.next/cache

  end2end:
    name: Perform E2E Test in ${{ matrix.browser }}
    needs: build-frontend
    runs-on: ubuntu-latest
    container:
      # renovate: datasource=docker depName=cypress/browsers versioning=docker
      image: cypress/browsers:node16.13.2-chrome97-ff96
      options: --user 1001 --shm-size=2g
    strategy:
      fail-fast: false
      matrix:
        browser: [ 'chrome' ]
        containers: [ 1, 2, 3, 4, 5 ]
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Download built frontend
        uses: actions/download-artifact@master
        with:
          name: next-build
          path: .next

      - uses: cypress-io/github-action@v2
        with:
          browser: ${{ matrix.browser }}
          start: 'yarn start:ci'
          parallel: true
          record: true
          group: "UI - ${{ matrix.browser }}"
          wait-on: 'http://127.0.0.1:3001/'
          wait-on-timeout: 120
          install-command: yarn install --immutable --silent
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@master
        if: always()
        with:
          name: screenshots
          path: cypress/screenshots
